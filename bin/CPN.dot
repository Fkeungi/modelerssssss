digraph G{
node[shape=box]
"condition.m"[label="condition.m",color=gold]
"onlyBuyer.m"[label="onlyBuyer.m",color=gold]
"onlySeller.m"[label="onlySeller.m",color=gold]
"inState.m"[label="inState.m",color=gold]
".f"[label=".f",color=gold]
"abort.f"[label="abort.f",color=gold]
"confirmPurchase.f"[label="confirmPurchase.f",color=gold]
"confirmReceived.f"[label="confirmReceived.f",color=gold]
"refundSeller.f"[label="refundSeller.f",color=gold]
"require.f.0"[label="require.f.0",color=gold]
"requireF.0"[label="requireF.0",color=gold]
"requireT.0"[label="requireT.0",color=gold]
"FunctionCallA.21"[label="FunctionCallA.21",color=gold]
"FunctionCall.21"[label="FunctionCall.21",color=gold]
"conditionPlaceholderStatement.23"[label="conditionPlaceholderStatement.23",color=gold]
"ModifierEnd.25"[label="ModifierEnd.25",color=gold]
"OnlyBuyer.f"[label="OnlyBuyer.f",color=gold]
"OnlySeller.f"[label="OnlySeller.f",color=gold]
"InvalidState.f"[label="InvalidState.f",color=gold]
"ValueNotEven.f"[label="ValueNotEven.f",color=gold]
"!=.42"[label="!=.42",color=gold]
"IfStatementA.46"[label="IfStatementA.46",color=gold]
"FunctionCallA.44"[label="FunctionCallA.44",color=gold]
"FunctionCall.44"[label="FunctionCall.44",color=gold]
"RevertStatement.45"[label="RevertStatement.45",color=gold]
"IfStatementB.46"[label="IfStatementB.46",color=gold]
"IfStatementC.46"[label="IfStatementC.46",color=gold]
"onlyBuyerPlaceholderStatement.47"[label="onlyBuyerPlaceholderStatement.47",color=gold]
"ModifierEnd.49"[label="ModifierEnd.49",color=gold]
"!=.54"[label="!=.54",color=gold]
"IfStatementA.58"[label="IfStatementA.58",color=gold]
"FunctionCallA.56"[label="FunctionCallA.56",color=gold]
"FunctionCall.56"[label="FunctionCall.56",color=gold]
"RevertStatement.57"[label="RevertStatement.57",color=gold]
"IfStatementB.58"[label="IfStatementB.58",color=gold]
"IfStatementC.58"[label="IfStatementC.58",color=gold]
"onlySellerPlaceholderStatement.59"[label="onlySellerPlaceholderStatement.59",color=gold]
"ModifierEnd.61"[label="ModifierEnd.61",color=gold]
"!=.68"[label="!=.68",color=gold]
"IfStatementA.72"[label="IfStatementA.72",color=gold]
"FunctionCallA.70"[label="FunctionCallA.70",color=gold]
"FunctionCall.70"[label="FunctionCall.70",color=gold]
"RevertStatement.71"[label="RevertStatement.71",color=gold]
"IfStatementB.72"[label="IfStatementB.72",color=gold]
"IfStatementC.72"[label="IfStatementC.72",color=gold]
"inStatePlaceholderStatement.73"[label="inStatePlaceholderStatement.73",color=gold]
"ModifierEnd.75"[label="ModifierEnd.75",color=gold]
node[shape=circle]
"global.value"[label="global.value"]
"global.seller"[label="global.seller"]
"global.buyer"[label="global.buyer"]
"global.state"[label="global.state"]
"condition.param.condition_"[label="condition.param.condition_"]
"inState.param.state_"[label="inState.param.state_"]
"global.msg"[label="global.msg"]
"condition.in.c.1"[label="condition.in.c.1",color=gold]
"condition.out.c.2"[label="condition.out.c.2",color=gold]
"require.in.c.3"[label="require.in.c.3",color=gold]
"require.param.condition"[label="require.param.condition"]
"requireF.c.4"[label="requireF.c.4",color=gold]
"require.out.c.5"[label="require.out.c.5",color=gold]
"FunctionCallB.c.6"[label="FunctionCallB.c.6",color=gold]
"FunctionCallC.c.7"[label="FunctionCallC.c.7",color=gold]
"FunctionCall.c.8"[label="FunctionCall.c.8",color=gold]
"conditionPlaceholderStatement.c.9"[label="conditionPlaceholderStatement.c.9",color=gold]
"OnlyBuyer.out.c.10"[label="OnlyBuyer.out.c.10",color=gold]
"OnlySeller.out.c.11"[label="OnlySeller.out.c.11",color=gold]
"InvalidState.out.c.12"[label="InvalidState.out.c.12",color=gold]
"ValueNotEven.out.c.13"[label="ValueNotEven.out.c.13",color=gold]
"onlyBuyer.in.c.14"[label="onlyBuyer.in.c.14",color=gold]
"onlyBuyer.out.c.15"[label="onlyBuyer.out.c.15",color=gold]
"onlyBuyer.tmp.42"[label="onlyBuyer.tmp.42"]
"BinaryOperation.c.16"[label="BinaryOperation.c.16",color=gold]
"IfStatementA.c.17"[label="IfStatementA.c.17",color=gold]
"FunctionCallB.c.18"[label="FunctionCallB.c.18",color=gold]
"FunctionCallC.c.19"[label="FunctionCallC.c.19",color=gold]
"FunctionCall.c.20"[label="FunctionCall.c.20",color=gold]
"RevertStatement.c.21"[label="RevertStatement.c.21",color=gold]
"IfStatement.c.22"[label="IfStatement.c.22",color=gold]
"onlyBuyerPlaceholderStatement.c.23"[label="onlyBuyerPlaceholderStatement.c.23",color=gold]
"onlySeller.in.c.24"[label="onlySeller.in.c.24",color=gold]
"onlySeller.out.c.25"[label="onlySeller.out.c.25",color=gold]
"onlySeller.tmp.54"[label="onlySeller.tmp.54"]
"BinaryOperation.c.26"[label="BinaryOperation.c.26",color=gold]
"IfStatementA.c.27"[label="IfStatementA.c.27",color=gold]
"FunctionCallB.c.28"[label="FunctionCallB.c.28",color=gold]
"FunctionCallC.c.29"[label="FunctionCallC.c.29",color=gold]
"FunctionCall.c.30"[label="FunctionCall.c.30",color=gold]
"RevertStatement.c.31"[label="RevertStatement.c.31",color=gold]
"IfStatement.c.32"[label="IfStatement.c.32",color=gold]
"onlySellerPlaceholderStatement.c.33"[label="onlySellerPlaceholderStatement.c.33",color=gold]
"inState.in.c.34"[label="inState.in.c.34",color=gold]
"inState.out.c.35"[label="inState.out.c.35",color=gold]
"inState.tmp.68"[label="inState.tmp.68"]
"BinaryOperation.c.36"[label="BinaryOperation.c.36",color=gold]
"IfStatementA.c.37"[label="IfStatementA.c.37",color=gold]
"FunctionCallB.c.38"[label="FunctionCallB.c.38",color=gold]
"FunctionCallC.c.39"[label="FunctionCallC.c.39",color=gold]
"FunctionCall.c.40"[label="FunctionCall.c.40",color=gold]
"RevertStatement.c.41"[label="RevertStatement.c.41",color=gold]
"IfStatement.c.42"[label="IfStatement.c.42",color=gold]
"inStatePlaceholderStatement.c.43"[label="inStatePlaceholderStatement.c.43",color=gold]
"condition.m"->"condition.in.c.1"[color=gold]
"require.f.0"->"require.in.c.3"[color=gold]
"require.in.c.3"->"requireF.0"[color=gold]
"require.param.condition"->"requireF.0"[label="read.4"]
"requireF.0"->"require.param.condition"[label="replace.5"]
"requireF.0"->"requireF.c.4"[color=gold]
"require.in.c.3"->"requireT.0"[color=gold]
"require.param.condition"->"requireT.0"[label="read.8"]
"requireT.0"->"require.param.condition"[label="replace.9"]
"requireT.0"->"require.out.c.5"[color=gold]
"condition.in.c.1"->"FunctionCallA.21"[color=gold]
"FunctionCallA.21"->"FunctionCallB.c.6"[color=gold]
"FunctionCallA.21"->"FunctionCallC.c.7"[color=gold]
"FunctionCallB.c.6"->"FunctionCall.21"[color=gold]
"FunctionCall.21"->"FunctionCall.c.8"[color=gold]
"FunctionCallC.c.7"->"require.f.0"[color=gold]
"require.out.c.5"->"FunctionCall.21"[color=gold]
"condition.param.condition_"->"FunctionCallA.21"[label="read.18"]
"FunctionCallA.21"->"condition.param.condition_"[label="replace.19"]
"FunctionCallA.21"->"require.param.condition"[label="write.20"]
"FunctionCall.c.8"->"conditionPlaceholderStatement.23"[color=gold]
"conditionPlaceholderStatement.c.9"->"ModifierEnd.25"[color=gold]
"ModifierEnd.25"->"condition.out.c.2"[color=gold]
"OnlyBuyer.f"->"OnlyBuyer.out.c.10"[label="control-end.24"]
"OnlySeller.f"->"OnlySeller.out.c.11"[label="control-end.25"]
"InvalidState.f"->"InvalidState.out.c.12"[label="control-end.26"]
"ValueNotEven.f"->"ValueNotEven.out.c.13"[label="control-end.27"]
"onlyBuyer.m"->"onlyBuyer.in.c.14"[color=gold]
"onlyBuyer.in.c.14"->"!=.42"[color=gold]
"global.buyer"->"!=.42"[label="read.30"]
"!=.42"->"global.buyer"[label="replace.31"]
"global.msg"->"!=.42"[label="read.32"]
"!=.42"->"global.msg"[label="replace.33"]
"!=.42"->"onlyBuyer.tmp.42"[label="write.34"]
"!=.42"->"BinaryOperation.c.16"[color=gold]
"BinaryOperation.c.16"->"IfStatementA.46"[color=gold]
"onlyBuyer.tmp.42"->"IfStatementA.46"[label="read.37"]
"IfStatementA.46"->"onlyBuyer.tmp.42"[label="replace.38"]
"IfStatementA.46"->"IfStatementA.c.17"[color=gold]
"IfStatementA.c.17"->"FunctionCallA.44"[color=gold]
"FunctionCallA.44"->"FunctionCallB.c.18"[color=gold]
"FunctionCallA.44"->"FunctionCallC.c.19"[color=gold]
"FunctionCallB.c.18"->"FunctionCall.44"[color=gold]
"FunctionCall.44"->"FunctionCall.c.20"[color=gold]
"FunctionCallC.c.19"->"OnlyBuyer.f"[color=gold]
"OnlyBuyer.out.c.10"->"FunctionCall.44"[color=gold]
"FunctionCall.c.20"->"RevertStatement.45"[color=gold]
"RevertStatement.45"->"RevertStatement.c.21"[color=gold]
"RevertStatement.c.21"->"IfStatementB.46"[color=gold]
"IfStatementB.46"->"IfStatement.c.22"[color=gold]
"BinaryOperation.c.16"->"IfStatementC.46"[color=gold]
"onlyBuyer.tmp.42"->"IfStatementC.46"[color=gold]
"IfStatementC.46"->"onlyBuyer.tmp.42"[label="replace.53"]
"IfStatementC.46"->"IfStatement.c.22"[color=gold]
"IfStatement.c.22"->"onlyBuyerPlaceholderStatement.47"[color=gold]
"onlyBuyerPlaceholderStatement.c.23"->"ModifierEnd.49"[color=gold]
"ModifierEnd.49"->"onlyBuyer.out.c.15"[color=gold]
"onlySeller.m"->"onlySeller.in.c.24"[color=gold]
"onlySeller.in.c.24"->"!=.54"[color=gold]
"global.seller"->"!=.54"[label="read.60"]
"!=.54"->"global.seller"[label="replace.61"]
"global.msg"->"!=.54"[label="read.62"]
"!=.54"->"global.msg"[label="replace.63"]
"!=.54"->"onlySeller.tmp.54"[label="write.64"]
"!=.54"->"BinaryOperation.c.26"[color=gold]
"BinaryOperation.c.26"->"IfStatementA.58"[color=gold]
"onlySeller.tmp.54"->"IfStatementA.58"[label="read.67"]
"IfStatementA.58"->"onlySeller.tmp.54"[label="replace.68"]
"IfStatementA.58"->"IfStatementA.c.27"[color=gold]
"IfStatementA.c.27"->"FunctionCallA.56"[color=gold]
"FunctionCallA.56"->"FunctionCallB.c.28"[color=gold]
"FunctionCallA.56"->"FunctionCallC.c.29"[color=gold]
"FunctionCallB.c.28"->"FunctionCall.56"[color=gold]
"FunctionCall.56"->"FunctionCall.c.30"[color=gold]
"FunctionCallC.c.29"->"OnlySeller.f"[color=gold]
"OnlySeller.out.c.11"->"FunctionCall.56"[color=gold]
"FunctionCall.c.30"->"RevertStatement.57"[color=gold]
"RevertStatement.57"->"RevertStatement.c.31"[color=gold]
"RevertStatement.c.31"->"IfStatementB.58"[color=gold]
"IfStatementB.58"->"IfStatement.c.32"[color=gold]
"BinaryOperation.c.26"->"IfStatementC.58"[color=gold]
"onlySeller.tmp.54"->"IfStatementC.58"[color=gold]
"IfStatementC.58"->"onlySeller.tmp.54"[label="replace.83"]
"IfStatementC.58"->"IfStatement.c.32"[color=gold]
"IfStatement.c.32"->"onlySellerPlaceholderStatement.59"[color=gold]
"onlySellerPlaceholderStatement.c.33"->"ModifierEnd.61"[color=gold]
"ModifierEnd.61"->"onlySeller.out.c.25"[color=gold]
"inState.m"->"inState.in.c.34"[color=gold]
"inState.in.c.34"->"!=.68"[color=gold]
"inState.param.state_"->"!=.68"[label="read.90"]
"!=.68"->"inState.param.state_"[label="replace.91"]
"global.state"->"!=.68"[label="read.92"]
"!=.68"->"global.state"[label="replace.93"]
"!=.68"->"inState.tmp.68"[label="write.94"]
"!=.68"->"BinaryOperation.c.36"[color=gold]
"BinaryOperation.c.36"->"IfStatementA.72"[color=gold]
"inState.tmp.68"->"IfStatementA.72"[label="read.97"]
"IfStatementA.72"->"inState.tmp.68"[label="replace.98"]
"IfStatementA.72"->"IfStatementA.c.37"[color=gold]
"IfStatementA.c.37"->"FunctionCallA.70"[color=gold]
"FunctionCallA.70"->"FunctionCallB.c.38"[color=gold]
"FunctionCallA.70"->"FunctionCallC.c.39"[color=gold]
"FunctionCallB.c.38"->"FunctionCall.70"[color=gold]
"FunctionCall.70"->"FunctionCall.c.40"[color=gold]
"FunctionCallC.c.39"->"InvalidState.f"[color=gold]
"InvalidState.out.c.12"->"FunctionCall.70"[color=gold]
"FunctionCall.c.40"->"RevertStatement.71"[color=gold]
"RevertStatement.71"->"RevertStatement.c.41"[color=gold]
"RevertStatement.c.41"->"IfStatementB.72"[color=gold]
"IfStatementB.72"->"IfStatement.c.42"[color=gold]
"BinaryOperation.c.36"->"IfStatementC.72"[color=gold]
"inState.tmp.68"->"IfStatementC.72"[color=gold]
"IfStatementC.72"->"inState.tmp.68"[label="replace.113"]
"IfStatementC.72"->"IfStatement.c.42"[color=gold]
"IfStatement.c.42"->"inStatePlaceholderStatement.73"[color=gold]
"inStatePlaceholderStatement.c.43"->"ModifierEnd.75"[color=gold]
"ModifierEnd.75"->"inState.out.c.35"[color=gold]
}
